# This is the CMakeCache file.
# For build in directory: c:/Users/samuel.barnett/Documents/repos/Mobagen/debug
# It was generated by CMake: C:/Program Files/JetBrains/CLion 2023.2.1/bin/cmake/win/x64/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//BUILD_EDITOR
BUILD_EDITOR:BOOL=ON

//BUILD_EXAMPLES
BUILD_EXAMPLES:BOOL=ON

//Path to a program.
CCACHE_BINARY:FILEPATH=CCACHE_BINARY-NOTFOUND

//Path to a program.
CLANG_FORMAT_PROGRAM:FILEPATH=CLANG_FORMAT_PROGRAM-NOTFOUND

//Path to a program.
CMAKE_AR:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Tools/MSVC/14.37.32822/bin/Hostx64/x64/lib.exe

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=Debug

//Enable colored diagnostics throughout.
CMAKE_COLOR_DIAGNOSTICS:BOOL=ON

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Tools/MSVC/14.37.32822/bin/Hostx64/x64/cl.exe

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /GR /EHsc

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/Zi /Ob0 /Od /RTC1

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/O1 /Ob1 /DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/O2 /Ob2 /DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//C compiler
CMAKE_C_COMPILER:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Tools/MSVC/14.37.32822/bin/Hostx64/x64/cl.exe

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=/Zi /Ob0 /Od /RTC1

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/O1 /Ob1 /DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=/O2 /Ob2 /DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/CMakeFiles/pkgRedirects

//Path to a program.
CMAKE_FORMAT_PROGRAM:FILEPATH=CMAKE_FORMAT_PROGRAM-NOTFOUND

//User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

//Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

//Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

//Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

//C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

//Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

//Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

//Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

//Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

//Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

//Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

//C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/MoBaGEn

//Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

//System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

//Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

//Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Tools/MSVC/14.37.32822/bin/Hostx64/x64/link.exe

//make program
CMAKE_MAKE_PROGRAM:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.1/bin/ninja/win/x64/ninja.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Path to a program.
CMAKE_MT:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/10.0.19041.0/x64/mt.exe

//Build static libraries with -fPIC
CMAKE_POSITION_INDEPENDENT_CODE:BOOL=ON

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=Module Based Game Engine

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=https://infinbrains.com

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=MoBaGEn

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=0.0.1

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=1

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/10.0.19041.0/x64/rc.exe

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=-DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=-D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//CORE INCLUDE SOURCE PATH
CORE_INC_DIR:PATH=C:/Users/samuel.barnett/Documents/repos/Mobagen/core

//Don't create a package lock file in the binary path
CPM_DONT_CREATE_PACKAGE_LOCK:BOOL=OFF

//Don't update the module path to allow using find_package
CPM_DONT_UPDATE_MODULE_PATH:BOOL=OFF

//Always download dependencies from source
CPM_DOWNLOAD_ALL:BOOL=OFF

//Add all packages added through CPM.cmake to the package lock
CPM_INCLUDE_ALL_IN_PACKAGE_LOCK:BOOL=OFF

//Only use `find_package` to get dependencies
CPM_LOCAL_PACKAGES_ONLY:BOOL=OFF

//Directory to download CPM dependencies
CPM_SOURCE_CACHE:PATH=OFF

//Always try to use `find_package` to get dependencies
CPM_USE_LOCAL_PACKAGES:BOOL=OFF

//Use additional directory of package name in cache on the most
// nested level.
CPM_USE_NAMED_CACHE_DIRECTORIES:BOOL=OFF

//Override the default CXX_STANDARD to compile with.
CXX_STANDARD_TARGET:STRING=DETECT

//Skip the installation process
DOCTEST_NO_INSTALL:BOOL=OFF

//Use std headers
DOCTEST_USE_STD_HEADERS:BOOL=OFF

//Build a static lib (cmake target) with a default main entry point
DOCTEST_WITH_MAIN_IN_STATIC_LIB:BOOL=ON

//Build tests/examples
DOCTEST_WITH_TESTS:BOOL=OFF

//ENABLE_WEB
ENABLE_CURL:BOOL=ON

//ENABLE_DOCUMENTATION
ENABLE_DOCUMENTATION:BOOL=OFF

//Enable test coverage
ENABLE_TEST_COVERAGE:BOOL=ON

//Directory under which to collect all populated content
FETCHCONTENT_BASE_DIR:PATH=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps

//Disables all attempts to download or update content and assumes
// source dirs already exist
FETCHCONTENT_FULLY_DISCONNECTED:BOOL=OFF

//Enables QUIET option for all content population
FETCHCONTENT_QUIET:BOOL=ON

//When not empty, overrides where to find pre-populated content
// for CPMLicenses.cmake
FETCHCONTENT_SOURCE_DIR_CPMLICENSES.CMAKE:PATH=

//When not empty, overrides where to find pre-populated content
// for doctest
FETCHCONTENT_SOURCE_DIR_DOCTEST:PATH=

//When not empty, overrides where to find pre-populated content
// for Format.cmake
FETCHCONTENT_SOURCE_DIR_FORMAT.CMAKE:PATH=

//When not empty, overrides where to find pre-populated content
// for GLM
FETCHCONTENT_SOURCE_DIR_GLM:PATH=

//When not empty, overrides where to find pre-populated content
// for IMGUI
FETCHCONTENT_SOURCE_DIR_IMGUI:PATH=

//When not empty, overrides where to find pre-populated content
// for SDL2
FETCHCONTENT_SOURCE_DIR_SDL2:PATH=

//When not empty, overrides where to find pre-populated content
// for SDL_image
FETCHCONTENT_SOURCE_DIR_SDL_IMAGE:PATH=

//Enables UPDATE_DISCONNECTED behavior for all content population
FETCHCONTENT_UPDATES_DISCONNECTED:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of CPMLicenses.cmake
FETCHCONTENT_UPDATES_DISCONNECTED_CPMLICENSES.CMAKE:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of doctest
FETCHCONTENT_UPDATES_DISCONNECTED_DOCTEST:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of Format.cmake
FETCHCONTENT_UPDATES_DISCONNECTED_FORMAT.CMAKE:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of GLM
FETCHCONTENT_UPDATES_DISCONNECTED_GLM:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of IMGUI
FETCHCONTENT_UPDATES_DISCONNECTED_IMGUI:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of SDL2
FETCHCONTENT_UPDATES_DISCONNECTED_SDL2:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of SDL_image
FETCHCONTENT_UPDATES_DISCONNECTED_SDL_IMAGE:BOOL=OFF

//Skip CMake formatting.
FORMAT_SKIP_CMAKE:BOOL=OFF

//Git command line client
GIT_EXECUTABLE:FILEPATH=C:/Program Files/Git for Windows/cmd/git.exe

//Path to a program.
GIT_PROGRAM:FILEPATH=C:/Program Files/Git for Windows/cmd/git.exe

//Path to a program.
LSB_RELEASE_EXEC:FILEPATH=LSB_RELEASE_EXEC-NOTFOUND

//Value Computed by CMake
MoBaGEn_BINARY_DIR:STATIC=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug

//Value Computed by CMake
MoBaGEn_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
MoBaGEn_SOURCE_DIR:STATIC=C:/Users/samuel.barnett/Documents/repos/Mobagen

//Arguments to supply to pkg-config
PKG_CONFIG_ARGN:STRING=

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=PKG_CONFIG_EXECUTABLE-NOTFOUND

//Dependencies for the target
SDL2-static_LIB_DEPENDS:STATIC=general;user32;general;gdi32;general;winmm;general;imm32;general;ole32;general;oleaut32;general;version;general;uuid;general;advapi32;general;setupapi;general;shell32;general;dinput8;

//Support loading AVIF images
SDL2IMAGE_AVIF:BOOL=OFF

//Use stb_image for loading JPEG and PNG files
SDL2IMAGE_BACKEND_STB:BOOL=ON

//Add WIC backend (Windows Imaging Component)
SDL2IMAGE_BACKEND_WIC:BOOL=OFF

//Support loading BMP images
SDL2IMAGE_BMP:BOOL=ON

//Name suffix for debug builds
SDL2IMAGE_DEBUG_POSTFIX:STRING=d

//Load dependencies dynamically
SDL2IMAGE_DEPS_SHARED:BOOL=ON

//Support loading GIF images
SDL2IMAGE_GIF:BOOL=ON

//Support loading JPEG images
SDL2IMAGE_JPG:BOOL=ON

//Add JPEG save support
SDL2IMAGE_JPG_SAVE:BOOL=ON

//Support loading JXL images
SDL2IMAGE_JXL:BOOL=OFF

//Support loading LBM images
SDL2IMAGE_LBM:BOOL=ON

//Support loading PCX images
SDL2IMAGE_PCX:BOOL=ON

//Support loading PNG images
SDL2IMAGE_PNG:BOOL=ON

//Add PNG save support
SDL2IMAGE_PNG_SAVE:BOOL=ON

//Support loading PNM images
SDL2IMAGE_PNM:BOOL=ON

//Support loading QOI images
SDL2IMAGE_QOI:BOOL=ON

//Support loading SVG images
SDL2IMAGE_SVG:BOOL=ON

//Build unit tests?
SDL2IMAGE_TESTS:BOOL=OFF

//Support loading TGA images
SDL2IMAGE_TGA:BOOL=ON

//Support loading TIFF images
SDL2IMAGE_TIF:BOOL=OFF

//Support loading WEBP images
SDL2IMAGE_WEBP:BOOL=OFF

//Support loading XCF images
SDL2IMAGE_XCF:BOOL=ON

//Support loading XPM images
SDL2IMAGE_XPM:BOOL=ON

//Support loading XV images
SDL2IMAGE_XV:BOOL=ON

//Value Computed by CMake
SDL2_BINARY_DIR:STATIC=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/sdl2-build

//Disable building/installation of SDL2main
SDL2_DISABLE_SDL2MAIN:BOOL=OFF

//Disable uninstallation of SDL2
SDL2_DISABLE_UNINSTALL:BOOL=OFF

//Value Computed by CMake
SDL2_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
SDL2_SOURCE_DIR:STATIC=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/sdl2-src

//Value Computed by CMake
SDL2_image_BINARY_DIR:STATIC=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/sdl_image-build

//Value Computed by CMake
SDL2_image_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
SDL2_image_SOURCE_DIR:STATIC=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/sdl_image-src

//Dependencies for the target
SDL2main_LIB_DEPENDS:STATIC=general;shell32;

//Use 3Dnow! MMX assembly routines
SDL_3DNOW:BOOL=ON

//Support the ALSA audio API
SDL_ALSA:BOOL=OFF

//Use Altivec assembly routines
SDL_ALTIVEC:BOOL=ON

//use NEON assembly blitters on ARM
SDL_ARMNEON:BOOL=OFF

//use SIMD assembly blitters on ARM
SDL_ARMSIMD:BOOL=OFF

//Support the Analog Real Time Synthesizer
SDL_ARTS:BOOL=OFF

//Use AddressSanitizer to detect memory errors
SDL_ASAN:BOOL=OFF

//Enable assembly routines
SDL_ASSEMBLY:BOOL=ON

//Enable internal sanity checks (auto/disabled/release/enabled/paranoid)
SDL_ASSERTIONS:STRING=auto

//Enable the Atomic subsystem
SDL_ATOMIC:BOOL=ON

//Enable the Audio subsystem
SDL_AUDIO:BOOL=ON

//number to use for magic backgrounding signal or 'OFF'
SDL_BACKGROUNDING_SIGNAL:STRING=OFF

//Use Ccache to speed up build
SDL_CCACHE:BOOL=ON

//Use clock_gettime() instead of gettimeofday()
SDL_CLOCK_GETTIME:BOOL=OFF

//Name suffix for debug builds
SDL_CMAKE_DEBUG_POSTFIX:STRING=d

//Use Cocoa video driver
SDL_COCOA:BOOL=OFF

//Enable the CPUinfo subsystem
SDL_CPUINFO:BOOL=ON

//Use DirectFB video driver
SDL_DIRECTFB:BOOL=OFF

//Use DirectX for Windows audio/video
SDL_DIRECTX:BOOL=ON

//Support the disk writer audio driver
SDL_DISKAUDIO:BOOL=ON

//Support the dummy audio driver
SDL_DUMMYAUDIO:BOOL=ON

//Use dummy video driver
SDL_DUMMYVIDEO:BOOL=ON

//Support the Enlightened Sound Daemon
SDL_ESD:BOOL=OFF

//Enable the Events subsystem
SDL_EVENTS:BOOL=ON

//Enable the File subsystem
SDL_FILE:BOOL=ON

//Enable the Filesystem subsystem
SDL_FILESYSTEM:BOOL=ON

//Force /MT for static VC runtimes
SDL_FORCE_STATIC_VCRT:BOOL=OFF

//number to use for magic foregrounding signal or 'OFF'
SDL_FOREGROUNDING_SIGNAL:STRING=OFF

//Use FusionSound audio driver
SDL_FUSIONSOUND:BOOL=OFF

//Use gcc builtin atomics
SDL_GCC_ATOMICS:BOOL=OFF

//Enable the Haptic subsystem
SDL_HAPTIC:BOOL=ON

//Enable the HIDAPI subsystem
SDL_HIDAPI:BOOL=ON

//Use HIDAPI for low level joystick drivers
SDL_HIDAPI_JOYSTICK:BOOL=ON

SDL_HIDAPI_LIBUSB:BOOL=OFF

//Install test-cases
SDL_INSTALL_TESTS:BOOL=OFF

//Support the JACK audio API
SDL_JACK:BOOL=OFF

//Enable the Joystick subsystem
SDL_JOYSTICK:BOOL=ON

//Use KMS DRM video driver
SDL_KMSDRM:BOOL=OFF

//Use the system C library
SDL_LIBC:BOOL=ON

//Use libsamplerate for audio rate conversion
SDL_LIBSAMPLERATE:BOOL=OFF

//Enable the Loadso subsystem
SDL_LOADSO:BOOL=ON

//Enable the Locale subsystem
SDL_LOCALE:BOOL=ON

//Enable Metal support
SDL_METAL:BOOL=OFF

//Enable the Misc subsystem
SDL_MISC:BOOL=ON

//Use MMX assembly routines
SDL_MMX:BOOL=ON

//Support the NAS audio API
SDL_NAS:BOOL=OFF

//Use offscreen video driver
SDL_OFFSCREEN:BOOL=ON

//Include OpenGL support
SDL_OPENGL:BOOL=ON

//Include OpenGL ES support
SDL_OPENGLES:BOOL=ON

//Use Pipewire audio
SDL_PIPEWIRE:BOOL=OFF

//Enable the Power subsystem
SDL_POWER:BOOL=ON

//Use POSIX threads for multi-threading
SDL_PTHREADS:BOOL=OFF

//Use PulseAudio
SDL_PULSEAUDIO:BOOL=OFF

//Enable the Render subsystem
SDL_RENDER:BOOL=ON

//Enable the Direct3D render driver
SDL_RENDER_D3D:BOOL=ON

//Enable the Metal render driver
SDL_RENDER_METAL:BOOL=OFF

//Use an rpath when linking SDL
SDL_RPATH:BOOL=OFF

//Use Raspberry Pi video driver
SDL_RPI:BOOL=OFF

//Enable the Sensor subsystem
SDL_SENSOR:BOOL=ON

//SDL_SHARED
SDL_SHARED:BOOL=OFF

//Support the sndio audio API
SDL_SNDIO:BOOL=OFF

//Use SSE assembly routines
SDL_SSE:BOOL=ON

//Use SSE2 assembly routines
SDL_SSE2:BOOL=ON

//Use SSE3 assembly routines
SDL_SSE3:BOOL=ON

//Allow GCC to use SSE floating point math
SDL_SSEMATH:BOOL=ON

//SDL_STATIC
SDL_STATIC:BOOL=ON

//Static version of the library should be built with Position Independent
// Code
SDL_STATIC_PIC:BOOL=ON

//Use iconv() from system-installed libraries
SDL_SYSTEM_ICONV:BOOL=ON

//Enable the Threads subsystem
SDL_THREADS:BOOL=ON

//Enable the Timers subsystem
SDL_TIMERS:BOOL=ON

//Vendor name and/or version to add to SDL_REVISION
SDL_VENDOR_INFO:STRING=

//Enable the Video subsystem
SDL_VIDEO:BOOL=ON

//Enable the virtual-joystick driver
SDL_VIRTUAL_JOYSTICK:BOOL=ON

//Use Vivante EGL video driver
SDL_VIVANTE:BOOL=OFF

//Enable Vulkan support
SDL_VULKAN:BOOL=ON

//Use the Windows WASAPI audio driver
SDL_WASAPI:BOOL=ON

//Use Wayland video driver
SDL_WAYLAND:BOOL=OFF

//Use X11 video driver
SDL_X11:BOOL=OFF

//Use Xinput for Windows
SDL_XINPUT:BOOL=ON

//Test the version found by find_package
TEST_INSTALLED_VERSION:BOOL=OFF

//Path to a program.
WINDRES:FILEPATH=WINDRES-NOTFOUND

//Value Computed by CMake
doctest_BINARY_DIR:STATIC=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/doctest-build

//Value Computed by CMake
doctest_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
doctest_SOURCE_DIR:STATIC=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/doctest-src

//Value Computed by CMake
glm_BINARY_DIR:STATIC=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/glm-build

//Value Computed by CMake
glm_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
glm_SOURCE_DIR:STATIC=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/glm-src


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=c:/Users/samuel.barnett/Documents/repos/Mobagen/debug
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=26
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=4
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files/JetBrains/CLion 2023.2.1/bin/cmake/win/x64/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/JetBrains/CLion 2023.2.1/bin/cmake/win/x64/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/JetBrains/CLion 2023.2.1/bin/cmake/win/x64/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Ninja
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen
//ADVANCED property for variable: CMAKE_INSTALL_BINDIR
CMAKE_INSTALL_BINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATADIR
CMAKE_INSTALL_DATADIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATAROOTDIR
CMAKE_INSTALL_DATAROOTDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DOCDIR
CMAKE_INSTALL_DOCDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INCLUDEDIR
CMAKE_INSTALL_INCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INFODIR
CMAKE_INSTALL_INFODIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_LIBDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBEXECDIR
CMAKE_INSTALL_LIBEXECDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALEDIR
CMAKE_INSTALL_LOCALEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALSTATEDIR
CMAKE_INSTALL_LOCALSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_MANDIR
CMAKE_INSTALL_MANDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_OLDINCLUDEDIR
CMAKE_INSTALL_OLDINCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RUNSTATEDIR
CMAKE_INSTALL_RUNSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SBINDIR
CMAKE_INSTALL_SBINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SHAREDSTATEDIR
CMAKE_INSTALL_SHAREDSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SYSCONFDIR
CMAKE_INSTALL_SYSCONFDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=19
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//noop for ranlib
CMAKE_RANLIB:INTERNAL=:
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files/JetBrains/CLion 2023.2.1/bin/cmake/win/x64/share/cmake-3.26
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
CPM_DIRECTORY:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/cmake
//Don't download or configure dependencies (for testing)
CPM_DRY_RUN:INTERNAL=OFF
CPM_FILE:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/cmake/CPM_0.38.2.cmake
CPM_INDENT:INTERNAL=CPM:
CPM_MODULE_PATH:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/CPM_modules
CPM_PACKAGES:INTERNAL=SDL2;SDL_image;IMGUI;doctest;Format.cmake;GLM;CPMLicenses.cmake
CPM_PACKAGE_CPMLicenses.cmake_BINARY_DIR:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/cpmlicenses.cmake-build
CPM_PACKAGE_CPMLicenses.cmake_SOURCE_DIR:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/cpmlicenses.cmake-src
CPM_PACKAGE_CPMLicenses.cmake_VERSION:INTERNAL=0.0.5
CPM_PACKAGE_Format.cmake_BINARY_DIR:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/format.cmake-build
CPM_PACKAGE_Format.cmake_SOURCE_DIR:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/format.cmake-src
CPM_PACKAGE_Format.cmake_VERSION:INTERNAL=1.7.3
CPM_PACKAGE_GLM_BINARY_DIR:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/glm-build
CPM_PACKAGE_GLM_SOURCE_DIR:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/glm-src
CPM_PACKAGE_GLM_VERSION:INTERNAL=
CPM_PACKAGE_IMGUI_BINARY_DIR:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/imgui-build
CPM_PACKAGE_IMGUI_SOURCE_DIR:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/imgui-src
CPM_PACKAGE_IMGUI_VERSION:INTERNAL=
CPM_PACKAGE_LOCK_FILE:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/cpm-package-lock.cmake
CPM_PACKAGE_SDL2_BINARY_DIR:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/sdl2-build
CPM_PACKAGE_SDL2_SOURCE_DIR:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/sdl2-src
CPM_PACKAGE_SDL2_VERSION:INTERNAL=
CPM_PACKAGE_SDL_image_BINARY_DIR:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/sdl_image-build
CPM_PACKAGE_SDL_image_SOURCE_DIR:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/sdl_image-src
CPM_PACKAGE_SDL_image_VERSION:INTERNAL=
CPM_PACKAGE_doctest_BINARY_DIR:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/doctest-build
CPM_PACKAGE_doctest_SOURCE_DIR:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/doctest-src
CPM_PACKAGE_doctest_VERSION:INTERNAL=2.4.8
CPM_VERSION:INTERNAL=0.38.2
CPMlicenses_SCRIPT_PATH:INTERNAL=C:/Users/samuel.barnett/Documents/repos/Mobagen/debug/_deps/cpmlicenses.cmake-src/CMakeLists.txt
//STRINGS property for variable: CXX_STANDARD_TARGET
CXX_STANDARD_TARGET-STRINGS:INTERNAL=DETECT;20;23;26
//Details about finding Git
FIND_PACKAGE_MESSAGE_DETAILS_Git:INTERNAL=[C:/Program Files/Git for Windows/cmd/git.exe][v2.40.0.windows.1()]
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//Have symbol abs
HAVE_ABS:INTERNAL=1
//Have symbol alloca
HAVE_ALLOCA1:INTERNAL=
//Have symbol alloca
HAVE_ALLOCA2:INTERNAL=
//Have symbol alloca
HAVE_ALLOCA3:INTERNAL=1
//Have include alloca.h
HAVE_ALLOCA_H:INTERNAL=
//Have symbol atof
HAVE_ATOF:INTERNAL=1
//Have symbol atoi
HAVE_ATOI:INTERNAL=1
//Have include audioclient.h
HAVE_AUDIOCLIENT_H:INTERNAL=1
//Have symbol bcopy
HAVE_BCOPY:INTERNAL=
//Have symbol bsearch
HAVE_BSEARCH:INTERNAL=1
//Have library c
HAVE_BUILTIN_ICONV:INTERNAL=
//Have symbol calloc
HAVE_CALLOC:INTERNAL=1
//Have include ctype.h
HAVE_CTYPE_H:INTERNAL=1
//Have include d3d11_1.h
HAVE_D3D11_H:INTERNAL=1
//Test HAVE_D3D12_H
HAVE_D3D12_H:INTERNAL=
//Have include d3d9.h
HAVE_D3D_H:INTERNAL=1
//Have include ddraw.h
HAVE_DDRAW_H:INTERNAL=1
//Have include dinput.h
HAVE_DINPUT_H:INTERNAL=1
//Have include dsound.h
HAVE_DSOUND_H:INTERNAL=1
//Have include dxgi.h
HAVE_DXGI_H:INTERNAL=1
//Have symbol elf_aux_info
HAVE_ELF_AUX_INFO:INTERNAL=
//Have include float.h
HAVE_FLOAT_H:INTERNAL=1
//Have symbol fopen64
HAVE_FOPEN64:INTERNAL=
//Have symbol free
HAVE_FREE:INTERNAL=1
//Have symbol fseeko
HAVE_FSEEKO:INTERNAL=
//Have symbol fseeko64
HAVE_FSEEKO64:INTERNAL=
//Have symbol getauxval
HAVE_GETAUXVAL:INTERNAL=
//Have symbol getenv
HAVE_GETENV:INTERNAL=1
//Have include iconv.h
HAVE_ICONV_H:INTERNAL=
//Have include immintrin.h
HAVE_IMMINTRIN_H:INTERNAL=1
//Have symbol index
HAVE_INDEX:INTERNAL=
//Have include inttypes.h
HAVE_INTTYPES_H:INTERNAL=1
//Have symbol itoa
HAVE_ITOA:INTERNAL=1
//Have library iconv
HAVE_LIBICONV:INTERNAL=
//Have library m
HAVE_LIBM:INTERNAL=
//Have include libunwind.h
HAVE_LIBUNWIND_H:INTERNAL=
//Have include limits.h
HAVE_LIMITS_H:INTERNAL=1
//Have include linux/input.h
HAVE_LINUX_INPUT_H:INTERNAL=
//Have symbol malloc
HAVE_MALLOC:INTERNAL=1
//Have include malloc.h
HAVE_MALLOC_H:INTERNAL=1
//Have include math.h
HAVE_MATH_H:INTERNAL=1
//Have symbol memcmp
HAVE_MEMCMP:INTERNAL=1
//Have symbol memcpy
HAVE_MEMCPY:INTERNAL=1
//Have symbol memmove
HAVE_MEMMOVE:INTERNAL=1
//Have include memory.h
HAVE_MEMORY_H:INTERNAL=1
//Have symbol memset
HAVE_MEMSET:INTERNAL=1
//Have include mmdeviceapi.h
HAVE_MMDEVICEAPI_H:INTERNAL=1
//Test HAVE_MPROTECT
HAVE_MPROTECT:INTERNAL=
//Have symbol M_PI
HAVE_M_PI:INTERNAL=
//Have symbol nanosleep
HAVE_NANOSLEEP:INTERNAL=
//Have symbol poll
HAVE_POLL:INTERNAL=
//Have symbol putenv
HAVE_PUTENV:INTERNAL=1
//Have symbol qsort
HAVE_QSORT:INTERNAL=1
//Have symbol realloc
HAVE_REALLOC:INTERNAL=1
//Have symbol rindex
HAVE_RINDEX:INTERNAL=
//Have include roapi.h
HAVE_ROAPI_H:INTERNAL=1
//Test HAVE_SA_SIGACTION
HAVE_SA_SIGACTION:INTERNAL=
//Have include sensorsapi.h
HAVE_SENSORSAPI_H:INTERNAL=1
//Have symbol setenv
HAVE_SETENV:INTERNAL=
//Have symbol setjmp
HAVE_SETJMP:INTERNAL=1
//Have include shellscalingapi.h
HAVE_SHELLSCALINGAPI_H:INTERNAL=1
//Have symbol sigaction
HAVE_SIGACTION:INTERNAL=
//Have include signal.h
HAVE_SIGNAL_H:INTERNAL=1
//Have symbol sscanf
HAVE_SSCANF:INTERNAL=1
//Have include stdarg.h
HAVE_STDARG_H:INTERNAL=1
//Have include stddef.h
HAVE_STDDEF_H:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have include stdio.h
HAVE_STDIO_H:INTERNAL=1
//Have include stdlib.h
HAVE_STDLIB_H:INTERNAL=1
//Have symbol strcasecmp
HAVE_STRCASECMP:INTERNAL=
//Have symbol strcasestr
HAVE_STRCASESTR:INTERNAL=
//Have symbol strchr
HAVE_STRCHR:INTERNAL=1
//Have symbol strcmp
HAVE_STRCMP:INTERNAL=1
//Have include strings.h
HAVE_STRINGS_H:INTERNAL=
//Have include string.h
HAVE_STRING_H:INTERNAL=1
//Have symbol strlcat
HAVE_STRLCAT:INTERNAL=
//Have symbol strlcpy
HAVE_STRLCPY:INTERNAL=
//Have symbol strlen
HAVE_STRLEN:INTERNAL=1
//Have symbol strncasecmp
HAVE_STRNCASECMP:INTERNAL=
//Have symbol strncmp
HAVE_STRNCMP:INTERNAL=1
//Have symbol strrchr
HAVE_STRRCHR:INTERNAL=1
//Have symbol strstr
HAVE_STRSTR:INTERNAL=1
//Have symbol strtod
HAVE_STRTOD:INTERNAL=1
//Have symbol strtok_r
HAVE_STRTOK_R:INTERNAL=
//Have symbol strtol
HAVE_STRTOL:INTERNAL=1
//Have symbol strtoll
HAVE_STRTOLL:INTERNAL=1
//Have symbol strtoul
HAVE_STRTOUL:INTERNAL=1
//Have symbol strtoull
HAVE_STRTOULL:INTERNAL=1
//Have symbol sysconf
HAVE_SYSCONF:INTERNAL=
//Have symbol sysctlbyname
HAVE_SYSCTLBYNAME:INTERNAL=
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Have include tpcshrd.h
HAVE_TPCSHRD_H:INTERNAL=1
//Have symbol unsetenv
HAVE_UNSETENV:INTERNAL=
//Have symbol vsnprintf
HAVE_VSNPRINTF:INTERNAL=1
//Have symbol vsscanf
HAVE_VSSCANF:INTERNAL=1
//Have include wchar.h
HAVE_WCHAR_H:INTERNAL=1
//Have symbol wcscasecmp
HAVE_WCSCASECMP:INTERNAL=
//Have symbol wcscmp
HAVE_WCSCMP:INTERNAL=1
//Have symbol wcsdup
HAVE_WCSDUP:INTERNAL=1
//Have symbol wcslcat
HAVE_WCSLCAT:INTERNAL=
//Have symbol wcslcpy
HAVE_WCSLCPY:INTERNAL=
//Have symbol wcslen
HAVE_WCSLEN:INTERNAL=1
//Have symbol wcsncasecmp
HAVE_WCSNCASECMP:INTERNAL=
//Have symbol wcsncmp
HAVE_WCSNCMP:INTERNAL=1
//Have symbol wcsstr
HAVE_WCSSTR:INTERNAL=1
//Test HAVE_WIN32_CC
HAVE_WIN32_CC:INTERNAL=1
//Test HAVE_WINDOWS_GAMING_INPUT_H
HAVE_WINDOWS_GAMING_INPUT_H:INTERNAL=1
//Test HAVE_XINPUT_GAMEPAD_EX
HAVE_XINPUT_GAMEPAD_EX:INTERNAL=
//Test HAVE_XINPUT_H
HAVE_XINPUT_H:INTERNAL=1
//Test HAVE_XINPUT_STATE_EX
HAVE_XINPUT_STATE_EX:INTERNAL=
//Have symbol _Exit
HAVE__EXIT:INTERNAL=1
//Have symbol _i64toa
HAVE__I64TOA:INTERNAL=1
//Have symbol _ltoa
HAVE__LTOA:INTERNAL=1
//Have symbol _stricmp
HAVE__STRICMP:INTERNAL=1
//Have symbol _strlwr
HAVE__STRLWR:INTERNAL=1
//Have symbol _strnicmp
HAVE__STRNICMP:INTERNAL=1
//Have symbol _strrev
HAVE__STRREV:INTERNAL=1
//Have symbol _strupr
HAVE__STRUPR:INTERNAL=1
//Have symbol _ui64toa
HAVE__UI64TOA:INTERNAL=1
//Have symbol _uitoa
HAVE__UITOA:INTERNAL=
//Have symbol _ultoa
HAVE__ULTOA:INTERNAL=1
//Have symbol _wcsdup
HAVE__WCSDUP:INTERNAL=1
//Have symbol _wcsicmp
HAVE__WCSICMP:INTERNAL=1
//Have symbol _wcsnicmp
HAVE__WCSNICMP:INTERNAL=1
//Have symbol __GLIBC__
LIBC_IS_GLIBC:INTERNAL=
//ADVANCED property for variable: PKG_CONFIG_ARGN
PKG_CONFIG_ARGN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SDL2IMAGE_DEBUG_POSTFIX
SDL2IMAGE_DEBUG_POSTFIX-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SDL_CMAKE_DEBUG_POSTFIX
SDL_CMAKE_DEBUG_POSTFIX-ADVANCED:INTERNAL=1
//Have include stddef.h;stdarg.h;stdlib.h;string.h;stdio.h;wchar.h;float.h
STDC_HEADERS:INTERNAL=1
//CMAKE_INSTALL_PREFIX during last run
_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX:INTERNAL=C:/Program Files (x86)/MoBaGEn
//Compiler reason failure
_Python_Compiler_REASON_FAILURE:INTERNAL=
//Development reason failure
_Python_Development_REASON_FAILURE:INTERNAL=
//Path to a program.
_Python_EXECUTABLE:INTERNAL=_Python_EXECUTABLE-NOTFOUND
//Interpreter reason failure
_Python_Interpreter_REASON_FAILURE:INTERNAL=
//NumPy reason failure
_Python_NumPy_REASON_FAILURE:INTERNAL=

